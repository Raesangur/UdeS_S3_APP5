# Trouver le worst case W = (d = phi(n))
# Lister les multiples entiers B = b * n + 1 < W
# Essayer tous les B / e, vérifier si ça donne un nombre entier

def find_multiples(W, n):
    B = []
    b = 1
    j = n 
    while b < W:
        B.append(b * n + 1)
        b += 1
    return B

def kicking_euclides_on_the_ground(e, phiN, n):
    B = find_multiples(phiN, n)
    print(B)

    for bn in B:
        d = bn / e
        if d.is_integer():
            return d

    print("Euclides a eu mal pour rien")
    return 0


n = 71632723108922042565754944705405938190163585182073827738737257362015607916694427702407539315166426071602596601779609881448209515844638662529498857637473895727439924386515509746946997356908229763669590304560652312325131017845440601438692992657035378159812499525148161871071841049058092385268270673367938496513
e = 1009
phiN = 71632723108922042565754944705405938190163585182073827738737257362015607916694427702407539315166426071602596601779609881448209515844638662529498857637473827619877761773410864319648798086006475717425016765310883448201464512252467386407753219877185553417635484970981578316733921058413611972497484410686329921748

print(kicking_euclides_on_the_ground(e, phiN, n))